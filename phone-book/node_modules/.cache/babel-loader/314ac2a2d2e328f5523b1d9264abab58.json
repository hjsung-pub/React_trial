{"ast":null,"code":"var _jsxFileName = \"/Users/hjsung/Desktop/\\u1112\\u1175\\u110C\\u116E\\u11AB/\\u1109\\u1173\\u1110\\u1165\\u1103\\u1175/React\\u1109\\u1173\\u1110\\u1165\\u1103\\u1175/workspace/phone-book/src/components/PhoneInfo.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PhoneInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //수정버튼을 눌렀을 때 edting 값을 true로 설정\n      //이 값이 true일때, 기존에 텍스트 형태로 보여주던 값들을 input 형태로 보여주게 됨.\n      editing: false,\n      //input의 값은 유동적이겠지요? input 값을 담기 위해서 각 필드를 위한 값도 설정\n      name: '',\n      phone: ''\n    };\n\n    this.handleRemove = () => {\n      //삭제버튼이 클릭되면 onRemove에 id 넣어서 호출\n      const {\n        info,\n        onRemove\n      } = this.props;\n      onRemove(info.id);\n    };\n\n    this.handleToggleEdit = () => {\n      const {\n        editing\n      } = this.state;\n      this.setState({\n        editing: !editing\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //여기서는 editing 값이 바뀔 때 처리 할 로직이 적혀있다.\n    //수정을 눌렀을 땐, 기존의 값이 Input에 나타나고,\n    //수정을 적용할땐, input값들이 부모한테 전달해준다.\n    const {\n      info,\n      onUpdate\n    } = this.props;\n\n    if (!prevState.editing && this.state.editing) {\n      //editing값이 true로 전환될때 info의 값을 state에 넣어준다.\n      this.setState({\n        name: info.name,\n        phone: info.phone\n      });\n    }\n\n    if (prevState.editing && !this.state.editing) {\n      //editing값이 false로 전환될때\n      onUpdate(info.id, {\n        name: this.state.name,\n        phone: this.state.phone\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    //수정상태가 아니고, info 값이 같다면 렌더링 안함\n    if (!this.state.editing && !nextState.editing && nextProps.info === this.props.info) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    console.log('render PhoneInfo :' + this.props.info.id);\n    const style = {\n      border: '1px solid #000',\n      padding: '8px',\n      margin: '8px'\n    };\n    const {\n      editing\n    } = this.state;\n\n    if (editing) {\n      //수정모드\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.name,\n          name: \"name\",\n          placeholder: \"\\uC774\\uB984\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.phone,\n          name: \"phone\",\n          placeholder: \"\\uC804\\uD654\\uBC88\\uD638\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleRemove,\n          className: \"btn-small d-gray\",\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleToggleEdit,\n          className: \"btn-small blue\",\n          children: \"\\uC801\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    } //일반모드\n\n\n    const {\n      name,\n      phone\n    } = this.props.info;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleRemove,\n        className: \"btn-small l-gray\",\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleToggleEdit,\n        className: \"btn-small blue\",\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nPhoneInfo.defaultProps = {\n  info: {\n    name: '이름',\n    phone: '010-1234-5678',\n    id: 0\n  }\n};","map":{"version":3,"sources":["/Users/hjsung/Desktop/히준/스터디/React스터디/workspace/phone-book/src/components/PhoneInfo.js"],"names":["React","Component","PhoneInfo","state","editing","name","phone","handleRemove","info","onRemove","props","id","handleToggleEdit","setState","handleChange","e","value","target","componentDidUpdate","prevProps","prevState","onUpdate","shouldComponentUpdate","nextProps","nextState","render","console","log","style","border","padding","margin","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class PhoneInfo extends Component {\n    static defaultProps = {\n        info : {\n            name : '이름',\n            phone : '010-1234-5678',\n            id: 0\n        }\n    }\n\n    //update \n    state = {\n        //수정버튼을 눌렀을 때 edting 값을 true로 설정\n        //이 값이 true일때, 기존에 텍스트 형태로 보여주던 값들을 input 형태로 보여주게 됨.\n        editing : false,\n        //input의 값은 유동적이겠지요? input 값을 담기 위해서 각 필드를 위한 값도 설정\n        name : '',\n        phone : ''\n    }\n    \n    handleRemove = () => {\n        //삭제버튼이 클릭되면 onRemove에 id 넣어서 호출\n        const {info, onRemove} = this.props;\n        onRemove(info.id);\n    }\n\n    //editing값을 반전시키는 함수\n    handleToggleEdit = () => {\n        const {editing} = this.state;\n        this.setState({\n            editing : !editing\n        });\n    }\n    //input에서 onChange 이벤트가 발생 될 때 호출되는 함수\n    handleChange = (e) =>{\n        const {name, value} = e.target;\n        this.setState({\n            [name] : value\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        //여기서는 editing 값이 바뀔 때 처리 할 로직이 적혀있다.\n        //수정을 눌렀을 땐, 기존의 값이 Input에 나타나고,\n        //수정을 적용할땐, input값들이 부모한테 전달해준다.\n\n        const {info, onUpdate} = this.props;\n        if(!prevState.editing && this.state.editing){\n            //editing값이 true로 전환될때 info의 값을 state에 넣어준다.\n            this.setState({\n                name : info.name,\n                phone : info.phone\n            })\n        }\n        if(prevState.editing && !this.state.editing){\n            //editing값이 false로 전환될때\n            onUpdate(info.id, {\n                name:this.state.name,\n                phone:this.state.phone\n            });\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        //수정상태가 아니고, info 값이 같다면 렌더링 안함\n        if(!this.state.editing && !nextState.editing && nextProps.info === this.props.info){\n            return false;\n        }\n        return true;\n    }\n\n    render() {\n        console.log('render PhoneInfo :' + this.props.info.id);\n        const style = {\n            border : '1px solid #000',\n            padding : '8px',\n            margin : '8px'\n        }\n       \n        const {editing} = this.state;\n\n        if(editing){//수정모드\n\n            return(\n                <div style={style}>\n                    <input\n                        value={this.state.name}\n                        name = \"name\"\n                        placeholder = \"이름\"\n                        onChange = {this.handleChange}\n                    />\n                    <input\n                        value={this.state.phone}\n                        name = \"phone\"\n                        placeholder = \"전화번호\"\n                        onChange = {this.handleChange}\n                    />\n                    <button onClick={this.handleRemove} className=\"btn-small d-gray\">삭제</button>\n                    <button onClick={this.handleToggleEdit} className=\"btn-small blue\">적용</button>\n                </div>\n            )\n        }\n        //일반모드\n        const {name, phone} = this.props.info;\n        return (\n            <ul style={style}>\n                <li><b>{name}</b></li>\n                <li>{phone}</li>\n                <button onClick={this.handleRemove} className=\"btn-small l-gray\">삭제</button>\n                <button onClick={this.handleToggleEdit} className=\"btn-small blue\">수정</button>\n            </ul>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}